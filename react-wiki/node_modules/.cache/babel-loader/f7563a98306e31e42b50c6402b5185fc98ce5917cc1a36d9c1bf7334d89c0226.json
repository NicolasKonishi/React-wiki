{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenzo\\\\OneDrive\\\\Documentos\\\\DOCS\\\\Projetos\\\\Estudos\\\\wiki\\\\React-wiki\\\\react-wiki\\\\src\\\\pages\\\\App.js\",\n  _s = $RefreshSig$();\nimport gitLogo from \"../assets/github.png\";\nimport Input from \"../components/Input\";\nimport ItemRepo from \"../components/ItemRepo\";\nimport Button from \"../components/Button\";\nimport { api } from \"../services/api\";\nimport { useState } from \"react\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentRepo, setCurrentRepo] = useState('');\n  const [repos, setRepos] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSearchRepo = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`repos/${currentRepo}`);\n      if (data.id) {\n        const isExist = repos.find(repo => repo.id === data.id);\n        if (!isExist) {\n          setRepos(prev => [...prev, data]);\n          setCurrentRepo('');\n          setErrorMessage(''); // Limpa mensagem de erro se for bem-sucedido\n          return;\n        }\n      }\n    } catch (error) {\n      setErrorMessage('Repositório não encontrado.'); // Exibe mensagem de erro\n    }\n  };\n  const handleRemoveRepo = id => {\n    const updatedRepos = repos.filter(repo => repo.id !== id);\n    setRepos(updatedRepos);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: gitLogo,\n      width: 72,\n      height: 72,\n      alt: \"github logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: currentRepo,\n      onChange: e => setCurrentRepo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSearchRepo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(ItemRepo, {\n      handleRemoveRepo: handleRemoveRepo,\n      repo: repo\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1kA+KHVgAjRribG0QsjrReFfNX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["gitLogo","Input","ItemRepo","Button","api","useState","Container","jsxDEV","_jsxDEV","App","_s","currentRepo","setCurrentRepo","repos","setRepos","errorMessage","setErrorMessage","handleSearchRepo","data","get","id","isExist","find","repo","prev","error","handleRemoveRepo","updatedRepos","filter","children","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","style","color","map","_c","$RefreshReg$"],"sources":["C:/Users/kenzo/OneDrive/Documentos/DOCS/Projetos/Estudos/wiki/React-wiki/react-wiki/src/pages/App.js"],"sourcesContent":["import gitLogo from \"../assets/github.png\";\nimport Input from \"../components/Input\";\nimport ItemRepo from \"../components/ItemRepo\";\nimport Button from \"../components/Button\";\nimport { api } from \"../services/api\";\nimport { useState } from \"react\";\nimport { Container } from \"./styles\";\n\nfunction App() {\n\n  const [currentRepo, setCurrentRepo] = useState('');\n  const [repos, setRepos] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSearchRepo = async () => {\n    try {\n      const { data } = await api.get(`repos/${currentRepo}`);\n\n      if (data.id) {\n        const isExist = repos.find(repo => repo.id === data.id);\n\n        if (!isExist) {\n          setRepos(prev => [...prev, data]);\n          setCurrentRepo('');\n          setErrorMessage('');  // Limpa mensagem de erro se for bem-sucedido\n          return;\n        }\n      }\n    } catch (error) {\n      setErrorMessage('Repositório não encontrado.'); // Exibe mensagem de erro\n    }\n  };\n\n  const handleRemoveRepo = (id) => {\n    const updatedRepos = repos.filter(repo => repo.id !== id);\n    setRepos(updatedRepos);\n  };\n\n  return (\n    <Container>\n      <img src={gitLogo} width={72} height={72} alt=\"github logo\" />\n      <Input value={currentRepo} onChange={(e) => setCurrentRepo(e.target.value)} />\n      <Button onClick={handleSearchRepo} />\n      \n      {/* Exibe a mensagem de erro se existir */}\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      {/* Renderiza os repositórios encontrados */}\n      {repos.map(repo => (\n        <ItemRepo key={repo.id} handleRemoveRepo={handleRemoveRepo} repo={repo} />\n      ))}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}